<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.anipick.backend.anime.mapper.AnimeMapper">
    <select id="selectUpcomingSeasonAnimes"
            parameterType="com.anipick.backend.anime.dto.RangeDateRequestDto"
            resultType="com.anipick.backend.anime.dto.AnimeAllTitleImgDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl
        FROM Anime a
        WHERE a.start_date BETWEEN #{startDate} AND #{endDate}
        AND a.status = 'NOT_YET_RELEASED'
        ORDER BY a.popularity DESC
            LIMIT 30
    </select>

    <select id="countComingSoon"
        parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
        resultType="long">
        SELECT COUNT(*)
        FROM Anime a
            WHERE
        <if test="includeAdult != true">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
    </select>

    <select id="selectComingSoonLatestAnimes"
            parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
            resultType="com.anipick.backend.anime.dto.ComingSoonItemAllTitleDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate,
               a.format AS format,
               a.is_adult AS isAdult
        FROM Anime a
        WHERE
         <if test="includeAdult != true">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
        <if test="lastId != null">
            AND a.anime_id &lt; #{lastId}
        </if>
        ORDER BY ${orderByQuery}
        LIMIT #{size}
    </select>

    <select id="selectComingSoonPopularityAnimes"
            parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
            resultType="com.anipick.backend.anime.dto.ComingSoonItemPopularityAlltitleDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate,
               a.format AS format,
               a.popularity AS score,
               a.is_adult AS isAdult
        FROM Anime a
        WHERE
         <if test="includeAdult != true">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
        <if test="lastId != null">
            AND a.popularity &lt; #{lastId}
        </if>
        ORDER BY ${orderByQuery}
        LIMIT #{size}
    </select>

    <select id="selectComingSoonStartDateAnimes"
            parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
            resultType="com.anipick.backend.anime.dto.ComingSoonItemAllTitleDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate,
               a.format AS format,
               a.is_adult AS isAdult
        FROM Anime a
        WHERE
         <if test="includeAdult != true">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
        <if test="lastValue != null">
            AND (
            a.start_date &gt; #{lastValue}
            OR (a.start_date = #{lastValue} AND a.anime_id > #{lastId})
            OR a.start_date IS NULL
            )
        </if>
        <if test="lastValue == null and lastId != null">
            AND a.anime_id > #{lastId}
            AND a.start_date IS NULL
        </if>
        ORDER BY a.start_date IS NULL ASC,
                 ${orderByQuery},
                 a.anime_id
        LIMIT #{size}
    </select>

    <select id="selectAnimeByAnimeId" resultType="com.anipick.backend.anime.domain.Anime">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.banner_image_url AS bannerImageUrl,
               a.description_kor AS descriptionKor,
               a.start_date AS startDate,
               a.end_date AS endDate,
               a.season_year AS seasonYear,
               a.episode_count AS episodeCount,
               a.duration AS duration,
               a.status AS status,
               a.average_score AS averageScore,
               a.popularity AS popularity,
               a.is_adult AS isAdult,
               a.format AS format,
               a.review_count AS reviewCount,
               a.next_airing_at AS nextAiringAt,
               a.next_time_until_airing AS nextTimeUntilAiring,
               a.next_episode AS nextEpisode
        FROM Anime a
        WHERE a.anime_id = #{animeId}
    </select>

    <select id="selectAnimeDetailInfoReviews"
            parameterType="com.anipick.backend.anime.dto.AnimeDetailInfoReviewsRequestDto"
            resultType="com.anipick.backend.anime.dto.AnimeDetailInfoReviewsItemDto">
        SELECT r.review_id AS reviewId,
               u.user_id AS userId,
               u.nickname AS nickname,
        -- profiler_image_url -> image.image_id 로 변경
               i.image_id AS profileImageUrl,
               r.rating AS rating,
               r.content AS content,
               r.created_at AS createdAt,
               r.is_spoiler AS isSpoiler,
               r.like_count AS likeCount,
               IF(rl.review_id IS NOT NULL, TRUE, FALSE) AS isLiked,
               (r.user_id = #{userId}) AS isMine
        FROM review r
            LEFT JOIN user u
                ON u.user_id = r.user_id
            LEFT JOIN reviewlike rl
                ON rl.review_id = r.review_id
                    AND rl.user_id = #{userId}
            LEFT JOIN Image i
                ON i.auth_id = u.user_id
        WHERE r.anime_id = #{animeId}
          AND r.content IS NOT NULL
        <!-- 커서 정렬 -->
        <choose>
            <!-- 최신순 -->
            <when test="sort == 'latest'">
                <if test="lastId != null">
                    AND r.review_id &lt; #{lastId}
                </if>
                ORDER BY r.review_id DESC
            </when>

            <!-- 평점 높은 순 -->
            <when test="sort == 'ratingDesc'">
                <if test="lastValue != null">
                    AND ( r.rating &lt; #{lastValue}
                    OR (r.rating = #{lastValue} AND r.review_id &lt; #{lastId})
                    )
                </if>
                ORDER BY ${orderByQuery}, r.review_id DESC
            </when>

            <!-- 평점 낮은 순 -->
            <when test="sort == 'ratingAsc'">
                <if test="lastValue != null">
                    AND (r.rating > #{lastValue}
                    OR (r.rating = #{lastValue} AND r.review_id &lt; #{lastId})
                    )
                </if>
                ORDER BY ${orderByQuery}, r.review_id DESC
            </when>

            <!-- 좋아요순 -->
            <otherwise>
                <if test="lastValue != null">
                    AND (r.like_count &lt; #{lastValue}
                    OR (r.like_count = #{lastValue} AND r.review_id &lt; #{lastId})
                    )
                </if>
                ORDER BY ${orderByQuery}, r.review_id DESC
            </otherwise>
        </choose>
        LIMIT #{size}
    </select>

    <select id="selectAnimeReviewCount" resultType="long">
        SELECT COUNT(*)
        FROM Review r
        WHERE r.anime_id = #{animeId}
          AND r.content IS NOT NULL
    </select>

    <select id="selectAnimeInfoDetail" resultType="com.anipick.backend.anime.dto.AnimeDetailInfoItemDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.banner_image_url AS bannerImageUrl,
               a.description_kor AS description,
               a.review_average_score AS averageRating,
               IF(ual.user_id IS NULL, FALSE, TRUE) AS isLiked,
               us.status AS watchStatus,
               a.format AS type,
               a.review_count AS reviewCount,
               a.episode_count AS episode,
               a.start_date AS startDate,
               a.status AS status,
               a.age AS age
        FROM anime a
                 LEFT JOIN useranimelike ual
                           ON a.anime_id = ual.anime_id
                               AND ual.user_id = #{userId}
                 LEFT JOIN useranimestatus us
                           ON a.anime_id = us.anime_id
                               AND us.user_id = #{userId}
        WHERE a.anime_id = #{animeId}
    </select>

    <select id="selectAnimeInfoRecommendationsByAnimeId" resultType="com.anipick.backend.anime.dto.AnimeAllTitleImgDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl
        FROM anime a
        WHERE a.anime_id IN (SELECT ara.anime_id
                             FROM anilistrecommendationsanimes ara
                             WHERE ara.recommendation_anime_id = #{animeId})
        ORDER BY a.anime_id DESC
        LIMIT #{size}
    </select>

    <select id="selectAnimeInfoSeriesByAnimeId" resultType="com.anipick.backend.anime.dto.AnimeAllTitleDateDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate
        FROM anime a
        WHERE anime_id IN (SELECT ra.anime_id
                           FROM relatedanime ra
                           WHERE ra.series_group_id = #{seriesGroupId}
                           AND ra.anime_id != #{seriesGroupId}
                           )
        ORDER BY a.anime_id
        LIMIT #{size}
    </select>
  
    <resultMap id="AnimeCharacterActorItemMap"
               type="com.anipick.backend.anime.dto.AnimeCharacterActorItemDto">

        <association property="character"
                     javaType="com.anipick.backend.anime.dto.CharacterDto">
            <result column="character_id" property="id"/>
            <result column="character_name_kor" property="nameKor"/>
            <result column="character_name_eng" property="nameEng"/>
            <result column="character_image_url" property="imageUrl"/>
        </association>

        <association property="voiceActor"
                     javaType="com.anipick.backend.anime.dto.VoiceActorDto">
            <result column="voiceactor_id" property="id"/>
            <result column="voiceactor_name_kor" property="nameKor"/>
            <result column="voiceactor_name_eng" property="nameEng"/>
            <result column="voiceactor_image_url" property="imageUrl"/>
        </association>

    </resultMap>


    <select id="selectAnimeInfoCharacterActors" resultMap="AnimeCharacterActorItemMap">
        SELECT c.character_id  AS character_id,
               c.name_kor AS character_name_kor,
               c.name_eng AS character_name_eng,
               c.profile_image AS character_image_url,
               v.voiceactor_id AS voiceactor_id,
               v.name_kor AS voiceactor_name_kor,
               v.name_eng AS voiceactor_name_eng,
               v.profile_image AS voiceactor_image_url
        FROM  Characteranime ca
                LEFT JOIN `Character` c
                      ON ca.character_id =  c.character_id
                LEFT JOIN Voiceactorcharacter vc
                      ON c.character_id = vc.character_id
                LEFT JOIN Voiceactor v
                      ON vc.voiceactor_id = v.voiceactor_id
        WHERE ca.anime_id = #{animeId}
        AND v.language = 'Japanese'
        ORDER BY CASE ca.role
                     WHEN 'MAIN' THEN 0
                     WHEN 'SUPPORTING' THEN 1
                     WHEN 'BACKGROUND' THEN 2
                     ELSE 3
                     END,
                 c.character_id DESC
            LIMIT #{size}
    </select>

    <resultMap id="AnimeCharacterActorResultMap"
               type="com.anipick.backend.anime.dto.AnimeCharacterActorResultDto">
    <association property="character"
                 javaType="com.anipick.backend.anime.dto.CharacterDto">
        <result column="character_id" property="id"/>
        <result column="character_name_kor" property="nameKor"/>
        <result column="character_name_eng" property="nameEng"/>
        <result column="character_image_url" property="imageUrl"/>
    </association>

    <association property="voiceActor"
                 javaType="com.anipick.backend.anime.dto.VoiceActorDto">
        <result column="voiceactor_id" property="id"/>
        <result column="voiceactor_name_kor" property="nameKor"/>
        <result column="voiceactor_name_eng" property="nameEng"/>
        <result column="voiceactor_image_url" property="imageUrl"/>
    </association>

    <association property="role"
                 javaType="com.anipick.backend.anime.domain.AnimeCharacterRole">
        <result column="role"/>
    </association>
    </resultMap>

    <select id="selectAnimeCharacterActors"
            resultMap="AnimeCharacterActorResultMap">
        SELECT c.character_id AS character_id,
               c.name_kor AS character_name_kor,
               c.name_eng AS character_name_eng,
               c.profile_image AS character_image_url,
               v.voiceactor_id AS voiceactor_id,
               v.name_kor AS voiceactor_name_kor,
               v.name_eng AS voiceactor_name_eng,
               v.profile_image AS voiceactor_image_url,
               ca.role AS role
        FROM  Characteranime ca
            LEFT JOIN `Character` c
                ON ca.character_id =  c.character_id
            LEFT JOIN Voiceactorcharacter vc
                ON c.character_id = vc.character_id
            LEFT JOIN Voiceactor v
                ON vc.voiceactor_id = v.voiceactor_id
        <where>
            ca.anime_id = #{animeId}
        AND v.language = 'Japanese'
            <if test="lastId != null and lastValue != null">
                AND (
                (CASE ca.role
                    WHEN 'MAIN' THEN 0
                    WHEN 'SUPPORTING' THEN 1
                    WHEN 'BACKGROUND' THEN 2
                    ELSE 3
                END)
                >
                (CASE #{lastValue}
                    WHEN 'MAIN' THEN 0
                    WHEN 'SUPPORTING' THEN 1
                    WHEN 'BACKGROUND' THEN 2
                    ELSE 3
                END)
                OR
                (
                (CASE ca.role
                    WHEN 'MAIN' THEN 0
                    WHEN 'SUPPORTING' THEN 1
                    WHEN 'BACKGROUND' THEN 2
                    ELSE 3
                END)
                =
                (CASE #{lastValue}
                    WHEN 'MAIN' THEN 0
                    WHEN 'SUPPORTING' THEN 1
                    WHEN 'BACKGROUND' THEN 2
                    ELSE 3
                END)
                AND c.character_id
                &lt;
                #{lastId}
                )
                )
            </if>
        </where>
        ORDER BY
        CASE ca.role
            WHEN 'MAIN' THEN 0
            WHEN 'SUPPORTING' THEN 1
            WHEN 'BACKGROUND' THEN 2
            ELSE 3
        END,
        c.character_id DESC
        LIMIT #{size}
    </select>

    <select id="selectRecommendationsByAnimeId" resultType="com.anipick.backend.anime.dto.AnimeAllTitleImgDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl
        FROM anime a
        WHERE a.anime_id IN (SELECT ara.anime_id
                             FROM anilistrecommendationsanimes ara
                             WHERE ara.recommendation_anime_id = #{animeId})
        <if test="lastId != null">
            AND a.anime_id &lt; #{lastId}
        </if>
        ORDER BY a.anime_id DESC
        LIMIT #{size}
    </select>

    <select id="countSeriesAnime" resultType="long">
        SELECT COUNT(*)
        FROM anime a
        WHERE anime_id IN (SELECT ra.anime_id
                           FROM relatedanime ra
                           WHERE ra.series_group_id = #{seriesGroupId}
                           AND ra.anime_id != #{seriesGroupId})
    </select>

    <select id="selectSeriesByAnimeId" resultType="com.anipick.backend.anime.dto.AnimeAllTitleDateDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.title_english AS titleEng,
               a.title_romaj AS titleRom,
               a.title_native AS titleNat,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate
        FROM anime a
        WHERE anime_id IN (SELECT ra.anime_id
                           FROM relatedanime ra
                           WHERE ra.series_group_id = #{seriesGroupId}
                           AND ra.anime_id != #{seriesGroupId}
                           )
        <if test="lastId != null">
            AND a.anime_id > #{lastId}
        </if>
        ORDER BY a.anime_id
        LIMIT #{size}
    </select>

    <select id="selectAnimeMyReview" resultType="com.anipick.backend.anime.dto.AnimeMyReviewResultDto">
        SELECT r.review_id AS reviewId,
               r.rating AS rating,
               r.content AS content,
               r.created_at AS createdAt,
               r.like_count AS likeCount
        FROM Review r
        WHERE r.anime_id = #{animeId}
        AND r.user_id = #{userId}
    </select>
</mapper>