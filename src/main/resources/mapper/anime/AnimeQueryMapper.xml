<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.anipick.backend.anime.mapper.AnimeMapper">
    <select id="selectUpcomingSeasonAnimes"
            parameterType="com.anipick.backend.anime.dto.RangeDateRequestDto"
            resultType="com.anipick.backend.anime.dto.AnimeIdTitleImgItemDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS title,
               a.cover_image_url AS coverImageUrl
        FROM Anime a
        JOIN PopularityAnimeOrder pao
            ON a.anime_id = pao.anime_id
        WHERE a.start_date BETWEEN #{startDate} AND #{endDate}
        AND a.status = 'NOT_YET_RELEASED'
        ORDER BY pao.popularity_anime_order_id
            LIMIT 30
    </select>

    <select id="countComingSoon"
        parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
        resultType="long">
        SELECT COUNT(*)
        FROM Anime a
            WHERE
        <if test="includeAdult != 1">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
    </select>

    <select id="selectComingSoonLatestAnimes"
            parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
            resultType="com.anipick.backend.anime.dto.ComingSoonItemBasicDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS title,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate,
               a.format AS format,
               a.is_adult AS isAdult
        FROM Anime a
        WHERE
         <if test="includeAdult != 1">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
        <if test="lastId != null">
            AND a.anime_id &lt; #{lastId}
        </if>
        ORDER BY ${orderByQuery}
        LIMIT #{size}
    </select>

    <select id="selectComingSoonPopularityAnimes"
            parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
            resultType="com.anipick.backend.anime.dto.ComingSoonItemPopularityDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS title,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate,
               a.format AS format,
               pao.popularity_anime_order_id AS popularId,
               a.is_adult AS isAdult
        FROM Anime a
        JOIN PopularityAnimeOrder pao
        ON pao.anime_id = a.anime_id
        WHERE
         <if test="includeAdult != 1">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
        <if test="lastId != null">
            AND pao.popularity_anime_order_id > #{lastId}
        </if>
        ORDER BY ${orderByQuery}
        LIMIT #{size}
    </select>

    <select id="selectComingSoonStartDateAnimes"
            parameterType="com.anipick.backend.anime.dto.ComingSoonRequestDto"
            resultType="com.anipick.backend.anime.dto.ComingSoonItemBasicDto">
        SELECT a.anime_id AS animeId,
               a.title_kor AS title,
               a.cover_image_url AS coverImageUrl,
               a.start_date AS startDate,
               a.format AS format,
               a.is_adult AS isAdult
        FROM Anime a
        WHERE
         <if test="includeAdult != 1">
            a.is_adult = #{includeAdult}
            AND
        </if>
            a.status = 'NOT_YET_RELEASED'
        AND a.cover_image_url != #{defaultCoverUrl}
        <if test="lastValue != null">
            AND (
            a.start_date &gt; #{lastValue}
            OR (a.start_date = #{lastValue} AND a.anime_id > #{lastId})
            OR a.start_date IS NULL
            )
        </if>
        <if test="lastValue == null and lastId != null">
            AND a.anime_id > #{lastId}
            AND a.start_date IS NULL
        </if>
        ORDER BY a.start_date IS NULL ASC,
                 ${orderByQuery},
                 a.anime_id
        LIMIT #{size}
    </select>

    <select id="selectAnimeByAnimeId" resultType="com.anipick.backend.anime.domain.Anime">
        SELECT a.anime_id AS animeId,
               a.title_kor AS titleKor,
               a.cover_image_url AS coverImageUrl,
               a.banner_image_url AS bannerImageUrl,
               a.description_kor AS descriptionKor,
               a.start_date AS startDate,
               a.end_date AS endDate,
               a.season_year AS seasonYear,
               a.episode_count AS episodeCount,
               a.duration AS duration,
               a.status AS status,
               a.average_score AS averageScore,
               a.popularity AS popularity,
               a.is_adult AS isAdult,
               a.format AS format,
               a.review_count AS reviewCount,
               a.next_airing_at AS nextAiringAt,
               a.next_time_until_airing AS nextTimeUntilAiring,
               a.next_episode AS nextEpisode
        FROM Anime a
        WHERE a.anime_id = #{animeId}
    </select>

    <select id="selectAnimeDetailInfoReviews"
            parameterType="com.anipick.backend.anime.dto.AnimeDetailInfoReviewsRequestDto"
            resultType="com.anipick.backend.anime.dto.AnimeDetailInfoReviewsItemDto">
        SELECT r.review_id AS reviewId,
               u.nickname AS nickname,
               u.profile_image_url AS profileImageUrl,
               r.rating AS rating,
               r.content AS content,
               r.created_at AS createdAt,
               r.is_spoiler AS isSpoiler,
               r.like_count AS likeCount,
               IF(rl.review_id IS NOT NULL, TRUE, FALSE) AS isLiked,
               (r.user_id = #{userId}) AS isMine
        FROM review r
            LEFT JOIN user u
                ON u.user_id = r.user_id
            LEFT JOIN reviewlike rl
                ON rl.review_id = r.review_id
                    AND rl.user_id = #{userId}
        WHERE r.anime_id = #{animeId}
        <if test="isSpoiler == false">
            AND r.is_spoiler = FALSE
        </if>
        <!-- 커서 정렬 -->
        <choose>
            <!-- 최신순 -->
            <when test="sort == 'latest'">
                <if test="lastId != null">
                    AND r.review_id &lt; #{lastId}
                </if>
                ORDER BY r.review_id DESC
            </when>

            <!-- 평점 높은 순 -->
            <when test="sort == 'ratingDesc'">
                <if test="lastValue != null">
                    AND ( r.rating &lt; #{lastValue}
                    OR (r.rating = #{lastValue} AND r.review_id &lt; #{lastId})
                    )
                </if>
                ORDER BY ${orderByQuery}, r.review_id DESC
            </when>

            <!-- 평점 낮은 순 -->
            <when test="sort == 'ratingAsc'">
                <if test="lastValue != null">
                    AND (r.rating > #{lastValue}
                    OR (r.rating = #{lastValue} AND r.review_id &lt; #{lastId})
                    )
                </if>
                ORDER BY ${orderByQuery}, r.review_id DESC
            </when>

            <!-- 좋아요순 -->
            <otherwise>
                <if test="lastValue != null">
                    AND (r.like_count &lt; #{lastValue}
                    OR (r.like_count = #{lastValue} AND r.review_id &lt; #{lastId})
                    )
                </if>
                ORDER BY ${orderByQuery}, r.review_id DESC
            </otherwise>
        </choose>
        LIMIT #{size}
    </select>

    <select id="selectAnimeReviewCount" resultType="long">
        SELECT a.review_count
        FROM Anime a
        WHERE a.anime_id = #{animeId}
    </select>
</mapper>