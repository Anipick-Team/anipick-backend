<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anipick.backend.explore.mapper.ExploreMapper">

    <!-- 공통 필터링(년도/분기/타입) -->
    <sql id="commonFilters">
        <if test="startDate != null and endDate != null">
            AND a.start_date BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="typeConvertSize &gt; 0">
            AND a.format IN
            <foreach item="f" collection="types" open="(" separator="," close=")">
                #{f}
            </foreach>
        </if>
    </sql>

    <!-- 전체 카운터 -->
    <select id="countExplored"
            parameterType="com.anipick.backend.explore.dto.ExploreRequestDto"
            resultType="long">
        SELECT COUNT(DISTINCT a.anime_id)
        FROM Anime a
        <where>
            <include refid="commonFilters"/>
            <if test="genresSize > 0">
                <choose>
                    <when test="genreOp == 'OR'">
                        AND EXISTS (
                        SELECT 1
                        FROM AnimeGenres ag
                        WHERE ag.anime_id = a.anime_id
                        AND ag.genre_id IN
                        <foreach item="g" collection="genres" open="(" separator="," close=")">
                            #{g}
                        </foreach>
                        )
                    </when>
                    <otherwise>
                        AND a.anime_id IN (
                        SELECT anime_id
                        FROM AnimeGenres
                        WHERE genre_id IN
                        <foreach item="g" collection="genres" open="(" separator="," close=")">
                            #{g}
                        </foreach>
                        GROUP BY anime_id
                        HAVING COUNT(DISTINCT genre_id) = #{genresSize}
                        )
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <!-- 탐색 조회 -->
    <select id="selectExplored"
            parameterType="com.anipick.backend.explore.dto.ExploreRequestDto"
            resultType="com.anipick.backend.explore.dto.ExploreAllTitleItemDto">
        SELECT
        a.anime_id AS id,
        a.title_kor AS titleKor,
        a.title_english AS titleEng,
        a.title_romaj AS titleRom,
        a.title_native AS titleNat,
        a.cover_image_url AS coverImageUrl,
        a.review_average_score AS averageScore,
        a.popularity AS score
        FROM Anime a
        <where>
            <!-- 공통 필터 -->
            <include refid="commonFilters"/>

            <!-- 장르 필터 -->
            <if test="genres != null and genres.size() &gt; 0">
                <choose>
                    <!-- 옵션 OR 일 경우 -->
                    <when test="genreOp == 'OR'">
                        AND EXISTS (
                        SELECT 1
                        FROM AnimeGenres ag
                        WHERE ag.anime_id = a.anime_id
                        AND ag.genre_id IN
                        <foreach item="g" collection="genres" open="(" separator="," close=")">
                            #{g}
                        </foreach>
                        )
                    </when>
                    <!-- 옵션 AND 일 경우 -->
                    <otherwise>
                        AND a.anime_id IN (
                        SELECT anime_id
                        FROM AnimeGenres
                        WHERE genre_id IN
                        <foreach item="g" collection="genres" open="(" separator="," close=")">
                            #{g}
                        </foreach>
                        GROUP BY anime_id
                        HAVING COUNT(DISTINCT genre_id) = #{genresSize}
                        )
                    </otherwise>
                </choose>
            </if>

            <!-- 커서 조건 -->
            <if test="sort == 'popularity' and lastId != null">
                AND a.popularity &lt; #{lastId}
            </if>
            <if test="sort != 'popularity' and lastId != null">
                <choose>
                    <when test="lastValue != null">
                        AND (
                        (a.review_average_score &lt; #{lastValue}) -- 낮은 평점
                        OR (a.review_average_score = #{lastValue} AND a.anime_id &lt; #{lastId}) -- 동점 낮은 ID
                        OR (a.review_average_score IS NULL) -- 평점 없는 데이터는 나중에
                        )
                    </when>
                    <otherwise>
                        AND a.review_average_score IS NULL
                        AND a.anime_id &lt; #{lastId}
                    </otherwise>
                </choose>
            </if>
        </where>

        <!-- 정렬 조건 -->
        <choose>
            <when test="sort == 'popularity'">
                ORDER BY ${orderByQuery}
            </when>
            <otherwise>
                ORDER BY ${orderByQuery}, a.anime_id DESC
            </otherwise>
        </choose>

        LIMIT #{size}
    </select>

</mapper>
